#include<Adafruit_SSD1306.h> 
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET -1

// 'rsz_cityu-logo-small-white', 90x57px
const unsigned char epd_bitmap_rsz_cityu_logo_small_white [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x01, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
	0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xc0, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 
	0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
	0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x07, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 
	0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x03, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfc, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
	0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x3f, 0xc0, 0x3e, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf8, 0x00, 0x00, 0x7f, 0x00, 0x1c, 0x7b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 
	0x00, 0x7e, 0x0f, 0x9c, 0xe3, 0xff, 0xff, 0x87, 0xfc, 0xff, 0xf8, 0x00, 0x00, 0xfc, 0x3f, 0x9f, 
	0xe3, 0xff, 0xff, 0x83, 0xf8, 0xff, 0xf8, 0x00, 0x01, 0xfc, 0x7f, 0xf0, 0xe0, 0x87, 0xfc, 0xc7, 
	0xf8, 0xff, 0xf0, 0x00, 0x03, 0xf8, 0xff, 0xf0, 0xe0, 0x87, 0xf8, 0xc7, 0xf8, 0xff, 0xf0, 0x00, 
	0x03, 0xf8, 0xff, 0xf8, 0xe3, 0xc3, 0xf1, 0xc7, 0xf9, 0xff, 0xf0, 0x00, 0x07, 0xf0, 0xff, 0xf8, 
	0xe3, 0xe3, 0xf3, 0xc7, 0xf9, 0xff, 0xf0, 0x00, 0x0f, 0xf1, 0xff, 0xf8, 0xe3, 0xe3, 0xe3, 0xc7, 
	0xf9, 0xff, 0xe0, 0x00, 0x1f, 0xf1, 0xff, 0xf8, 0xc7, 0xf1, 0xe7, 0xc7, 0xf9, 0xff, 0xe0, 0x00, 
	0x1f, 0xf1, 0xff, 0xf8, 0xc7, 0xf1, 0xc7, 0xc7, 0xf9, 0xff, 0xe0, 0x00, 0x3f, 0xf1, 0xff, 0xf8, 
	0xc7, 0xf1, 0x8f, 0xc7, 0xf9, 0xff, 0xe0, 0x00, 0x7f, 0xf0, 0xff, 0xf8, 0xc7, 0xf8, 0x8f, 0xc7, 
	0xf1, 0xff, 0xc0, 0x00, 0xff, 0xf0, 0xff, 0xf8, 0xc7, 0xf8, 0x1f, 0xc7, 0xf1, 0xff, 0xc0, 0x00, 
	0x7f, 0xf8, 0x7f, 0xf8, 0xc7, 0xf8, 0x3f, 0xc7, 0xf3, 0xff, 0xc0, 0x00, 0x03, 0xfc, 0x3f, 0xf1, 
	0xc7, 0xf8, 0x3f, 0xc3, 0xe3, 0xff, 0xc0, 0x00, 0x00, 0x3e, 0x00, 0x31, 0xc3, 0xfc, 0x7f, 0xe1, 
	0x87, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x79, 0xe0, 0xfc, 0x7f, 0xf0, 0x0f, 0xff, 0x80, 0x00, 
	0x00, 0x00, 0x03, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 
	0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xf9, 0xff, 0xff, 
	0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf3, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x03, 0xe3, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x07, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 
	0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xfe, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x07, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00
};

// Array of all bitmaps for convenience. (Total bytes used to store images in PROGMEM = 704)
const int epd_bitmap_allArray_LEN = 1;
const unsigned char* epd_bitmap_allArray[1] = {
	epd_bitmap_rsz_cityu_logo_small_white
};



Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire,OLED_RESET);

void setup() {
  Serial.begin(9600);

  // Initialize the display
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    for (;;);
  }

  display.clearDisplay();

  // Display the bitmap
  display.drawBitmap(0, 0, epd_bitmap_rsz_cityu_logo_small_white, 90, 57, SSD1306_WHITE);
  display.display();

  delay(5000);
}

void loop() {
  // Main code to run repeatedly
}
