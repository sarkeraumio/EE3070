
//{WiFi_Module_Variable
  #include "WiFiEsp.h"
  #include "ThingSpeak.h" // always include thingspeak header file after other header files and custom macros
  #include "wifi_module.h"

  char ssid[] = "EE3070_P1615_1";   // your network SSID (name) 
  char pass[] = "EE3070P1615";   // your network password
  int keyIndex = 0;            // your network key Index number (needed only for WEP)
  WiFiEspClient  client;

  // Emulate Serial1 on pins 6/7 if not present
  #ifndef HAVE_HWSERIAL1
  #include "SoftwareSerial.h"
  SoftwareSerial Serial1(19, 18); // RX, TX
  #define ESP_BAUDRATE  19200
  #else
  #define ESP_BAUDRATE  115200
  #endif

  // Weather station channel details
  unsigned long weatherStationChannelNumber = 12397;
  unsigned int temperatureFieldNumber = 4;

  // Counting channel details
  unsigned long counterChannelNumber = 298725;
  const char * myCounterReadAPIKey = "SODG0O2UZVGKWAW";
  unsigned int counterFieldNumber = 1; 

  //Read_Function

  unsigned long myChannelNumber = 2838639;
  const char * myWriteAPIKey = "ZZIJ4BM8EQJSCGJE";

  // Initialize our values
  int number1 = 0;
  int number2 = random(0,100);
  int number3 = random(0,100);
  int number4 = random(0,100);
  String myStatus = "";
//}

// //{INA219_Voltage_Measurement
//   /*!
//   *@file getVoltageCurrentPower.ino
//   *@brief Get the current, voltage, and power of electronic devices.
//   *@copyright   Copyright (c) 2010 DFRobot Co.Ltd (http://www.dfrobot.com)
//   *@license     The MIT license (MIT)
//   *@author [fengli](li.feng@dfrobot.com)
//   *@version  V1.0
//   *@date  2022-3-1
//   *@url https://github.com/DFRobot/DFRobot_INA219
//   */

//   #include <Wire.h>
//   #include "DFRobot_INA219.h"
//   #include "volt_measure.h"


//   /**
//   * @fn DFRobot_INA219_IIC
//   * @brief pWire I2C controller pointer
//   * @param i2caddr  I2C address
//   * @n INA219_I2C_ADDRESS1  0x40   A0 = 0  A1 = 0
//   * @n INA219_I2C_ADDRESS2  0x41   A0 = 1  A1 = 0
//   * @n INA219_I2C_ADDRESS3  0x44   A0 = 0  A1 = 1
//   * @n INA219_I2C_ADDRESS4  0x45   A0 = 1  A1 = 1	 
//     */
//   DFRobot_INA219_IIC     ina219(&Wire, INA219_I2C_ADDRESS4);

//   // Revise the following two paramters according to actual reading of the INA219 and the multimeter
//   // for linearly calibration
//   float ina219Reading_mA = 1000;
//   float extMeterReading_mA = 1000;



// //}

void setup() {

//{WiFi_Module_SetUp
  Serial.begin(115200);  
  while(!Serial){
    ; // wait for serial port to connect. Needed for Leonardo native USB port only
  }
  
  // initialize serial for ESP module  
  setEspBaudRate(ESP_BAUDRATE);

  while (!Serial) {
    ; // wait for serial port to connect. Needed for Leonardo native USB port only
  }

  Serial.print("Searching for ESP8266..."); 
  // initialize ESP module
  WiFi.init(&Serial1);

  // check for the presence of the shield
  if (WiFi.status() == WL_NO_SHIELD) {
    Serial.println("WiFi shield not present");
    // don't continue
    while (true);
  }
  Serial.println("found it!");
    
  ThingSpeak.begin(client);  // Initialize ThingSpeak
//}

// //{INA219_Volt_Measurement_SetUp
//   Serial.begin(115200);
//   //Open the serial port
//   while(!Serial);
  
//   Serial.println();
//   //Initialize the sensor
//   while(ina219.begin() != true) {
//       Serial.println("INA219 begin faild");
//       delay(2000);
//   }
//   //Linear calibration
//   ina219.linearCalibrate(/*The measured current before calibration*/ina219Reading_mA, /*The current measured by other current testers*/extMeterReading_mA);
//   Serial.println();
// //}
}



void loop() {
  WiFi_Read();
  Delay(1000);
  WiFi_Write();
  //Voltage_Measure();
}
